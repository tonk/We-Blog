# we-blog, a bash completion script for We-Blog
# Revision  (c) 2011-2012 Ton Kersten Jaromir Hradilek
# Revision  (c) 2010-2011 Jaromir Hradilek
# Copyright (c) 2009 Miroslav Hrad√≠lek

# This program is  free software:  you can redistribute it and/or modify it
# under  the terms  of the  GNU General Public License  as published by the
# Free Software Foundation, version 3 of the License.
#
# This program  is  distributed  in the hope  that it will  be useful,  but
# WITHOUT  ANY WARRANTY;  without  even the implied  warranty of MERCHANTA-
# BILITY  or  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the  GNU General Public License  along
# with this program. If not, see <http://www.gnu.org/licenses/>.

# we-blog-init function
_we-blog_init()
{
  # call _we-blog with init as a parameter
  _we-blog "init"
}

# we-blog-config function
_we-blog_config()
{
  # call _we-blog with config as a parameter
  _we-blog "config"
}

# we-blog-add function
_we-blog_add()
{
  # call _we-blog with add as a parameter
  _we-blog "add"
}

# we-blog-edit function
_we-blog_edit()
{
  # call _we-blog with edit as a parameter
  _we-blog "edit"
}

# we-blog-remove function
_we-blog_remove()
{
  # call _we-blog with remove as a parameter
  _we-blog "remove"
}

# we-blog-list function
_we-blog_list()
{
  # call _we-blog with list as a parameter
  _we-blog "list"
}

# we-blog-make function
_we-blog_make()
{
  # call _we-blog with make as a parameter
  _we-blog "make"
}

# we-blog-log function
_we-blog_log()
{
  # call _we-blog with log as a parameter
  _we-blog "log"
}

# main function accepts one optional argument utility
# _we-blog [utility]
_we-blog()
{
  local cur prev opts params first

  # initial variables
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  if [[ "$#" -eq 1 ]]; then
    # function called with parameter - utility call
    params="$@" # obligatory to not complete wrapper commands
    first="$1"
  else
    # function called without parameter - wrapper call
    first="${COMP_WORDS[1]}"
  fi

  # basic options - we-blog utilities - wrapper's first option
  opts="init config add edit remove list make log help version"

  # handle utility dependent opts
  case "${first}" in
    init)
    # init handler code ---------------------------------------------------
      # utility specifick options
      local specopts="-b --blogdir -f --force -q --quiet -V --verbose -h \
--help -v --version"

      # argument completions
      case "$prev" in
        -b|--blogdir)
          COMPREPLY=( $(compgen -d -- ${cur}) )
          return 0
          ;;
        *)
          # do nothing
          ;;
      esac

      # no argument completions
      if [[ "$cur" == -* ]]; then
        COMPREPLY=( $(compgen -W "${specopts}" -- ${cur}) )
        return 0
      fi
      ;;
    config)
    # config handler code -------------------------------------------------
      # utility specifick options
      local specopts="-b --blogdir -E --editor -e --edit -q --quiet -V \
--verbose -h --help -v --version"
      local specnames="blog.title blog.subtitle blog.theme blog.style \
blog.lang blog.posts color.list color.log core.doctype core.extension \
core.encoding core.editor core.processor feed.baseurl feed.posts \
feed.fullposts post.author post.date post.tags user.name \
user.nickname user.email"

      # argument completions
      case "$prev" in
        -b|--blogdir)
          COMPREPLY=( $(compgen -d -- ${cur}) )
          return 0
          ;;
        -E|--editor)
          COMPREPLY=()
          return 0
          ;;
        blog.*|color.*|core.*|feed.*|post.*|user.*|--)
          COMPREPLY=()
          return 0
          ;;
        *)
          # do nothing
          ;;
      esac

      # no argument completions
      if [[ "$cur" == -* ]]; then
        COMPREPLY=( $(compgen -W "${specopts}" -- ${cur}) )
        return 0
      else
        COMPREPLY=( $(compgen -W "${specnames}" -- ${cur}) )
        return 0
      fi
      ;;
    add)
    # add handler code ----------------------------------------------------
      # utility specifick options
      local specopts="-b --blogdir -E --editor -t --title -a --author -d \
--date -k --keywords -T --tags -u --url -p --page -P --post -C \
--no-processor  -q --quiet -V --verbose -h --help -v --version"

      # argument completions
      case "$prev" in
        -b|--blogdir)
          COMPREPLY=( $(compgen -d -- ${cur}) )
          return 0
          ;;
        -d|--date)
          COMPREPLY=( $(date +%Y-%m-%d) )
          return 0
          ;;
        -E|--editor|-t|--title|-a|--author|-k|--keywords|-T|--tags|-u|-url)
          COMPREPLY=()
          return 0
          ;;
        *)
          # do nothing
          ;;
      esac

      # no argument completions
      if [[ "$cur" == -* ]]; then
        COMPREPLY=( $(compgen -W "${specopts}" -- ${cur}) )
        return 0
      else
        COMPREPLY=( $(compgen -f -- ${cur}) )
        return 0
      fi
      ;;
    edit)
    # edit handler code ---------------------------------------------------
      # utility specifick options
      local specopts="-b --blogdir -E --editor -p --page -P --post -f \
--force -C --no-processor -q --quiet -V --verbose -h --help -v --version"

      # argument completions
      case "$prev" in
        -b|--blogdir)
          COMPREPLY=( $(compgen -d -- ${cur}) )
          return 0
          ;;
        -E|--editor)
          COMPREPLY=()
          return 0
          ;;
        *)
          # do nothing
          ;;
      esac

      # no argument completions
      if [[ "$cur" == -* ]]; then
        COMPREPLY=( $(compgen -W "${specopts}" -- ${cur}) )
        return 0
      fi
      ;;
    remove)
    # remove handler code -------------------------------------------------
      # utility specifick options
      local specopts="-b --blogdir -p --page -P --post -i --interactive \
-f --force -q --quiet -V --verbose -h --help -v --version"

      # argument completions
      case "$prev" in
        -b|--blogdir)
          COMPREPLY=( $(compgen -d -- ${cur}) )
          return 0
          ;;
        *)
          # do nothing
          ;;
      esac

      # no argument completions
      if [[ "$cur" == -* ]]; then
        COMPREPLY=( $(compgen -W "${specopts}" -- ${cur}) )
        return 0
      fi
      ;;
    list)
    # list handler code ---------------------------------------------------
      # utility specifick options
      local specopts="-b --blogdir -I --id -a --author -t --title -T \
--tag -d --day -m --month -y --year -n --number -p --pages -P --posts -S \
--stats -s --short -r --reverse -c --color -C --no-color -q --quiet -V \
--verbose -h --help -v --version"

      # argument completions
      case "$prev" in
        -b|--blogdir)
          COMPREPLY=( $(compgen -d -- ${cur}) )
          return 0
          ;;
        -d|--day)
          COMPREPLY=( $(date +%d) )
          return 0
          ;;
        -m|--month)
          COMPREPLY=( $(date +%m) )
          return 0
          ;;
        -y|--year)
          COMPREPLY=( $(date +%Y) )
          return 0
          ;;
        -I|--id|-a|--author|-t|--title|-T|--tag|-n|--number)
          COMPREPLY=()
          return 0
          ;;
        *)
          # do nothing
          ;;
      esac

      # no argument completions
      if [[ "$cur" == -* ]]; then
        COMPREPLY=( $(compgen -W "${specopts}" -- ${cur}) )
        return 0
      fi
      ;;
    make)
    # make handler code ---------------------------------------------------
      # utility specifick options
      local specopts="-b --blogdir -d --destdir -c --no-css -I --no-index \
-p --no-posts -P --no-pages -t --no-tags -r --no-rss -F --full-paths -q \
--quiet -V --verbose -h --help -v --version"

      # argument completions
      case "$prev" in
        -b|--blogdir|-d|--destdir)
          COMPREPLY=( $(compgen -d -- ${cur}) )
          return 0
          ;;
        *)
          # do nothing
          ;;
      esac

      # no argument completions
      if [[ "$cur" == -* ]]; then
        COMPREPLY=( $(compgen -W "${specopts}" -- ${cur}) )
        return 0
      fi
      ;;
    log)
    # log handler code ----------------------------------------------------
      # utility specifick options
      local specopts="-b --blogdir -n --number -s --short -r --reverse -c \
--color -C --no-color -q --quiet -V --verbose -h --help -v --version"

      # argument completions
      case "$prev" in
        -b|--blogdir)
          COMPREPLY=( $(compgen -d -- ${cur}) )
          return 0
          ;;
        -n|--number)
          COMPREPLY=()
          return 0
          ;;
        *)
          # do nothing
          ;;
      esac

      # no argument completions
      if [[ "$cur" == -* ]]; then
        COMPREPLY=( $(compgen -W "${specopts}" -- ${cur}) )
        return 0
      fi
      ;;
    help)
    # help handler code ---------------------------------------------------
      # no argument completions
      if [[ "$prev" == "help" ]]; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
      fi
      ;;
    *)
      # do nothing
      ;;
  esac

  # handle basic opts ie. we-blog utilities
  # reply only if function was called from wrapper
  if test "$COMP_CWORD" -eq 1 && test -z "$params"; then
    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    return 0
  fi
}
# bind _we-blog function to we-blog command
complete -F _we-blog we-blog
# bind _we-blog init function to we-blog-init command
complete -F _we-blog_init we-blog-init
# bind _we-blog_config function to we-blog-config command
complete -F _we-blog_config we-blog-config
# bind _we-blog_add function to we-blog-add command
complete -F _we-blog_add we-blog-add
# bind _we-blog_edit function to we-blog-edit command
complete -F _we-blog_edit we-blog-edit
# bind _we-blog_remove function to we-blog-remove command
complete -F _we-blog_remove we-blog-remove
# bind _we-blog_list function to we-blog-list command
complete -F _we-blog_list we-blog-list
# bind _we-blog_make function to we-blog-make command
complete -F _we-blog_make we-blog-make
# bind _we-blog_log function to we-blog-log command
complete -F _we-blog_log we-blog-log
